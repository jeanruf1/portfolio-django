# backend/portfolio_project/settings.py

"""
Django settings for portfolio_project project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv
import dj_database_url

# 1. --- CONFIGURAÇÕES BASE ---
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Carrega as variáveis de ambiente do arquivo .env
# Isso é usado principalmente para o ambiente de desenvolvimento local
load_dotenv()

# 2. --- CHAVES E DEBUG ---
# Chave secreta para segurança do Django. NUNCA DEIXE ESTA CHAVE EXPOSTA EM PÚBLICO!
# Ela é lida do arquivo .env ou de variáveis de ambiente do servidor de produção.
SECRET_KEY = os.environ.get('SECRET_KEY')

# Detecta se estamos rodando no ambiente de produção da Render.com
IS_RENDER = 'RENDER' in os.environ

# O modo DEBUG deve ser True em desenvolvimento para vermos as páginas de erro detalhadas,
# e False em produção por segurança e performance.
DEBUG = not IS_RENDER

# Hosts/domínios permitidos para acessar a aplicação.
ALLOWED_HOSTS = []

# Em produção na Render, o host é adicionado automaticamente.
if IS_RENDER:
    RENDER_EXTERNAL_HOSTNAME = os.environ.get('RENDER_EXTERNAL_HOSTNAME')
    if RENDER_EXTERNAL_HOSTNAME:
        ALLOWED_HOSTS.append(RENDER_EXTERNAL_HOSTNAME)

# Em desenvolvimento, permita o acesso via localhost.
if not IS_RENDER:
    ALLOWED_HOSTS.extend(['localhost', '127.0.0.1'])


# 3. --- DEFINIÇÃO DE APLICAÇÕES (APPS) ---
# Aplicações que compõem nosso projeto.
# settings.py

# settings.py

# settings.py

INSTALLED_APPS = [
    # Apps padrão do Django
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Nossos apps
    'projects.apps.ProjectsConfig',

    # Apps de terceiros
    'tailwind',
    'theme',
]

# Configuração específica do django-tailwind
TAILWIND_APP_NAME = 'theme'
INTERNAL_IPS = [
    "127.0.0.1",
]


# 4. --- MIDDLEWARE ---
# Funções que processam requisições e respostas globalmente.
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


# 5. --- URLs E TEMPLATES ---
ROOT_URLCONF = 'portfolio_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # Diz ao Django para procurar templates na pasta 'templates' na raiz do projeto.
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'portfolio_project.wsgi.application'


# 6. --- BANCO DE DADOS ---
# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases
if IS_RENDER:
    # Em produção, usa a URL do banco de dados fornecida pela Render.
    # dj_database_url parseia essa URL e configura o Django corretamente.
    DATABASES = {
        'default': dj_database_url.config(
            conn_max_age=600,
            ssl_require=True, # Força conexão segura com o banco de dados
        )
    }
else:
    # Em desenvolvimento, usa o banco de dados PostgreSQL do Docker Compose,
    # com as credenciais do arquivo .env.
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': os.environ.get('POSTGRES_DB'),
            'USER': os.environ.get('POSTGRES_USER'),
            'PASSWORD': os.environ.get('POSTGRES_PASSWORD'),
            'HOST': 'db',  # O nome do serviço do banco de dados no docker-compose.yml
            'PORT': 5432,
        }
    }


# 7. --- VALIDAÇÃO DE SENHAS ---
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]


# 8. --- INTERNACIONALIZAÇÃO ---
# https://docs.djangoproject.com/en/5.0/topics/i18n/
LANGUAGE_CODE = 'pt-br'
TIME_ZONE = 'America/Sao_Paulo'
USE_I18N = True
USE_TZ = True


# 9. --- ARQUIVOS ESTÁTICOS E DE MÍDIA ---
# Arquivos estáticos (CSS, JavaScript, Imagens do tema)
# https://docs.djangoproject.com/en/5.0/howto/static-files/
STATIC_URL = '/static/'
# Diretório para onde o comando `collectstatic` vai copiar todos os arquivos estáticos para o deploy.
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STATIC_ROOT = BASE_DIR / 'staticfiles'

# Arquivos de Mídia (Uploads dos usuários: capas de projeto, etc.)
MEDIA_URL = '/media/'
# Diretório onde os arquivos de upload serão salvos.
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# 10. --- CONFIGURAÇÕES PADRÃO ---
# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER # Garante que o remetente padrão seja o seu email