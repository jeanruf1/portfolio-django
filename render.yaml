# render.yaml - Versão com a ESTRUTURA correta

# Primeiro, definimos os bancos de dados que nosso projeto precisa.
databases:
  - name: portfolio-db        # Um nome para o serviço do banco de dados
    databaseName: portfolio_db  # O nome do banco de dados em si
    user: portfolio_user      # O nome do usuário
    plan: free                # O plano de serviço

# Depois, definimos os serviços que vão rodar nosso código.
services:
  # Serviço da nossa Aplicação Web (Django)
  - type: web
    name: portfolio-web
    runtime: python # Usando a chave 'runtime' que é mais clara
    plan: free
    buildCommand: |
      pip install --no-cache-dir -r requirements.txt
      python manage.py collectstatic --noinput
      python manage.py migrate
    startCommand: "gunicorn portfolio_project.wsgi:application"
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: portfolio-db
          property: connectionString
      # As outras variáveis de ambiente que já conhecemos.
      - key: SECRET_KEY
        generateValue: true
      - key: PYTHON_VERSION
        value: "3.11.13"
      - key: DEBUG # Adicione esta para garantir que o modo DEBUG esteja desativado
        value: 0
